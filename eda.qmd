---
title: "Phenomenal Eevee"
subtitle: "Exploratory data analysis"
format: html
editor: visual
execute:
  echo: true
---

# Research question(s)

What streaming platform presents the highest-ranked television shows produced in the last century? 

-   We define \"highest-ranked\" as shows with the highest Rotten Tomatoes ranking 

-   The streaming platforms we are analyzing are Disney+, Netflix, Hulu, and Prime Video.

# Data collection and cleaning

Have an initial draft of your data cleaning appendix. Document every step that takes your raw data file(s) and turns it into the analysis-ready data set that you would submit with your final project. Include text narrative describing your data collection (downloading, scraping, surveys, etc) and any additional data curation/cleaning (merging data frames, filtering, transformations of variables, etc). Include code for data curation/cleaning, but not collection.

```{r}
#| label: data-collection-cleaning

library(tidyverse)
library(tidymodels)
library(dplyr)

tv_shows <- read_csv(file = "data/tv_shows.csv")

tv_shows_cleaned <- tv_shows %>%
  select(-1:-2, -6, -ncol(.)) %>%
  mutate(Netflix = if_else(Netflix == 1, "Yes", "No"), 
         Hulu = if_else(Hulu == 1, "Yes", "No"),
         `Prime Video` = if_else(`Prime Video` == 1, "Yes", "No"),
         `Disney+` = if_else(`Disney+` == 1, "Yes", "No"))

tv_shows_cleaned


```

# Data description

Have an initial draft of your data description section. Your data description should be about your analysis-ready data.

# Data limitations

Identify any potential problems with your dataset.

# Exploratory data analysis

Perform an (initial) exploratory data analysis.

```{r}
#| label: explanatory-data-analysis

# descriptive statistics
names(tv_shows_cleaned)[4] = 'rotten_tomatoes'
names(tv_shows_cleaned)[7] = 'prime_video'
names(tv_shows_cleaned)[8] = 'disney_plus'

tv_shows_cleaned$rotten_tomatoes <- sapply(tv_shows_cleaned$rotten_tomatoes, function(x) as.numeric(gsub("/100","",x)))


netflix <- filter(tv_shows_cleaned, Netflix == "Yes")
netflix <- netflix |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'netflix')

hulu <- filter(tv_shows_cleaned, Hulu == "Yes")
hulu <- hulu |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'hulu')

prime <- filter(tv_shows_cleaned, prime_video == "Yes")
prime <- prime |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'prime')

disney <- filter(tv_shows_cleaned, disney_plus == "Yes")
disney <- disney |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'disney')

total <- rbind(netflix, hulu)
total <- rbind(total,prime)
total <- rbind(total,disney)


mean_rankings <- data.frame(platform = c('Netflix','Hulu','Amazon Prime','Disney'), mean=c(netflix[[3]][1], hulu[[3]][1],prime[[3]][1], disney[[3]][1]))

total |>
  ggplot(aes(x = platform, y = rotten_tomatoes)) + 
  geom_boxplot() +
  labs(title = "Ratings of Streamed Shows by Platform", x = "Platforms", y = "Show Ratings")

mean_rankings |>
  ggplot(aes(x = platform, y = mean)) + ylim(c(0, 100)) +
  geom_bar(stat = "identity") +
  labs(title = "Ratings of Streamed Shows by Platform", x = "Platforms", y = "Mean Ratings")




```

# Questions for reviewers

List specific questions for your peer reviewers and project mentor to answer in giving you feedback on this phase.
