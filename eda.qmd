---
title: "Phenomenal Eevee"
subtitle: "Exploratory data analysis"
format: html
editor: visual
execute:
  echo: true
---

# Research question(s)

What streaming platform presents the highest-ranked television shows produced in the last century? 

-   We define "highest-ranked" as shows with the highest Rotten Tomatoes ranking 

-   The streaming platforms we are analyzing are Disney+, Netflix, Hulu, and Prime Video.

# Data collection and cleaning

Have an initial draft of your data cleaning appendix. Document every step that takes your raw data file(s) and turns it into the analysis-ready data set that you would submit with your final project. Include text narrative describing your data collection (downloading, scraping, surveys, etc) and any additional data curation/cleaning (merging data frames, filtering, transformations of variables, etc). Include code for data curation/cleaning, but not collection.

```{r}
#| label: data-collection-cleaning

library(tidyverse)
library(tidymodels)
library(dplyr)

tv_shows <- read_csv(file = "data/tv_shows.csv")

tv_shows_cleaned <- tv_shows %>%
  select(-1:-2, -6, -ncol(.)) %>%
  mutate(Netflix = if_else(Netflix == 1, "Yes", "No"), 
         Hulu = if_else(Hulu == 1, "Yes", "No"),
         `Prime Video` = if_else(`Prime Video` == 1, "Yes", "No"),
         `Disney+` = if_else(`Disney+` == 1, "Yes", "No"),
         `Rotten Tomatoes` = str_remove(`Rotten Tomatoes`, "/100"),
         `Rotten Tomatoes` = parse_integer(`Rotten Tomatoes`)) 

names(tv_shows_cleaned)[4] = 'rotten_tomatoes'
names(tv_shows_cleaned)[7] = 'prime_video'
names(tv_shows_cleaned)[8] = 'disney_plus'
        
tv_shows_cleaned


```

The first step is to load required packages: `tidyverse`, `tidymodels`, and `dplyr`.

After loading the packages, the `tv_shows.csv` file is read into a data frame `tv_shows` using the `read_csv` function from the `tidyverse` package. The next step is data cleaning, which involves selecting columns and renaming them. The select function from `dplyr` package is used to remove columns that are not needed, specifically the first two columns (`-1:-2`), the sixth column (`-6`), and the last column (`-ncol(.)`). The column names are also renamed to make them more readable by replacing spaces with underscores.

The third step is to convert binary variables (0/1) to Yes/No. This is done using the `if_else` function from `dplyr`. For each of the four streaming platforms (Netflix, Hulu, Prime Video, Disney+), if the value is 1, the platform is available (`"Yes"`) and if the value is 0, the platform is not available (`"No"`).

The final cleaned data frame is stored in a new data frame called `tv_shows_cleaned`.

# Data description

Have an initial draft of your data description section. Your data description should be about your analysis-ready data.

# Data limitations

Identify any potential problems with your dataset.

# Exploratory data analysis

Perform an (initial) exploratory data analysis.

```{r}
#| label: explanatory-data-analysis

# descriptive statistics
names(tv_shows_cleaned)[4] = 'rotten_tomatoes'
names(tv_shows_cleaned)[7] = 'prime_video'
names(tv_shows_cleaned)[8] = 'disney_plus'

tv_shows_cleaned$rotten_tomatoes <- sapply(tv_shows_cleaned$rotten_tomatoes, function(x) as.numeric(gsub("/100","",x)))


netflix <- filter(tv_shows_cleaned, Netflix == "Yes")
netflix <- netflix |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'netflix')

hulu <- filter(tv_shows_cleaned, Hulu == "Yes")
hulu <- hulu |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'hulu')

prime <- filter(tv_shows_cleaned, prime_video == "Yes")
prime <- prime |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'prime')

disney <- filter(tv_shows_cleaned, disney_plus == "Yes")
disney <- disney |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'disney')

total <- rbind(netflix, hulu)
total <- rbind(total,prime)
total <- rbind(total,disney)


mean_rankings <- data.frame(platform = c('Netflix','Hulu','Amazon Prime','Disney'), mean=c(netflix[[3]][1], hulu[[3]][1],prime[[3]][1], disney[[3]][1]))

total |>
  ggplot(aes(x = platform, y = rotten_tomatoes)) + 
  geom_boxplot() +
  labs(title = "Ratings of Streamed Shows by Platform", x = "Platforms", y = "Show Ratings")

mean_rankings |>
  ggplot(aes(x = platform, y = mean)) + ylim(c(0, 100)) +
  geom_bar(stat = "identity") +
  labs(title = "Ratings of Streamed Shows by Platform", x = "Platforms", y = "Mean Ratings")




```

# Questions for reviewers

List specific questions for your peer reviewers and project mentor to answer in giving you feedback on this phase.

1\. Is the research question clearly stated and does it align with the data collected and analyzed? Is it interesting and relevant?

2\. Are the data collection methods and sources clearly describes? Are there any gaps or limitations in the data?

3\. Is the data cleaning process clearly explained and well-documented? Are there any concerns or issues with the data cleaning? Are there any missing outliers or inconsistencies? How were they handled?

4\. Are the summary statistics and plots relevant to the research question? Are they clearly presented and explained?

5\. Are there any potential confounding variables or biases that should be considered in the analysis?

6\. Are there any additional analyses or visualizations that could be helpful in exploring the data further?

7\. Is the exploration data analysis comprehensive and well-organized?

8\. Are there any areas where more explainations or detail would be helpful in understanding the analysis?

9\. Are the plots informative and well-designed? Do they represent any insights or relationships in the data? Are they appropriate for the type of data and the research questions?
