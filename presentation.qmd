---
title: Streaming Wars
subtitle: A Data-Driven Comparison of Exclusive and Non-Exclusive Shows on Popular Streaming Platforms
author: Phenomenal Eevee <br> Kayla Riggs, Uyen Hoang, Pinxian Lu, Lili Mkrtchyan, Joyce Chen 
date: 05/05/2023
format: revealjs
editor: visual
execute:
  echo: false
---

## Our Topic: Streaming Wars

**Our Motivation:**

::: r-fit-text
::: {style="margin: 1px; padding: 6px;"}
Streaming platforms have taken the world by storm due to their convenience and ability to house innumerable popular television shows and movies. As these mediums continue to grow in popularity, discourse about them is also developing and is often centered around one primary question: Which platform is best?

We have taken an in-depth look at four mainstream services ---- Netflix, Amazon Prime Video, Hulu, and Disney+ ---- the quality of their programs, measured in Rotten Tomatoes scores.

**Our Research Questions:**

RQ1: "Is the quality of exclusive shows different from non-exclusive shows in each respective platform?"

RQ2: "Are exclusive shows' ratings different between the four platforms (Netflix, Hulu, Disney+, and Prime Video)?"
:::
:::

## Introducing the Data

::: r-fit-text
::: {style="margin: 1px; padding: 6px;"}
**Original Dataset Characteristics**

-   The original dataset contains 12 columns and 5368 observations.
-   The observations (rows) represents each individual TV show readily watched and broadcasted on at least one of the four top ranking broadcasting platforms (Hulu, Disney+, Prime Video and Netflix).
-   The attributes (columns) categorizes each individual TV show based on the streaming platform it's being broadcasted on and reveals additional information. This includes revealing the year the TV show was produced, target age group, whether show is streamed on a specific platfom, and rating of the show (Rotten Tomatoes and IMDB metrics).

**Data Cleaning**

-   Removed '%' in the Rotten Tomatoes and converted the values to integers
-   Column Names were renamed following best practices
-   Converted binary variables Netflix, Hulu, Prime Video, Disney+ into "Yes" and "No"
-   Mutated to add logical (bool) data columns that specifies (non)exclusive tv shows on each of the 4 streaming platforms.
:::
:::

```{r}
library(tidyverse)
library(tidymodels)
library(dplyr)

tv_shows <- read_csv(file = "data/tv_shows.csv")

tv_shows_cleaned <- tv_shows |>
  mutate(Netflix = if_else(Netflix == 1, "Yes", "No"), 
         Hulu = if_else(Hulu == 1, "Yes", "No"),
         `Prime Video` = if_else(`Prime Video` == 1, "Yes", "No"),
         `Disney+` = if_else(`Disney+` == 1, "Yes", "No"),
         `Rotten Tomatoes` = str_remove(`Rotten Tomatoes`, "/100"),
         `Rotten Tomatoes` = parse_integer(`Rotten Tomatoes`)) |>
  mutate(exclusive_netflix = Netflix == "Yes" & 
           Hulu == "No" & 
           `Prime Video` == "No" & 
           `Disney+` == "No",
         exclusive_hulu = Hulu == "Yes" & 
           Netflix == "No" & 
           `Prime Video` == "No" & 
           `Disney+` == "No",
         exclusive_prime_video = `Prime Video` == "Yes" & 
           Netflix == "No" & 
           Hulu == "No" & 
           `Disney+` == "No",
         exclusive_disney_plus = `Disney+` == "Yes" & 
           Netflix == "No" & 
           Hulu == "No" & 
           `Prime Video` == "No")

num_netflix_exclusive <- sum(tv_shows_cleaned$exclusive_netflix == TRUE)
num_hulu_exclusive <- sum(tv_shows_cleaned$exclusive_hulu == TRUE)
num_prime_video_exclusive <- sum(tv_shows_cleaned$exclusive_prime_video == TRUE)
num_disney_plus_exclusive <- sum(tv_shows_cleaned$exclusive_disney_plus == TRUE)

tv_shows_cleaned1 <- tv_shows_cleaned |>
  select(Title, `Rotten Tomatoes`, Netflix, Hulu, `Prime Video`, `Disney+`, 
         exclusive_netflix, exclusive_hulu, exclusive_prime_video, 
         exclusive_disney_plus) |>
  slice_head(n= 10)

tv_shows_cleaned1
  
```

## Highlights from EDA

::: {style="margin: 1px; padding: 3px;"}
```{r fig.margin, fig.margin = TRUE}

library(gridExtra)

tv_shows_cleaned_copy <- tv_shows_cleaned

netflix <- filter(tv_shows_cleaned_copy, Netflix == "Yes")
names(netflix)[7] <- "rotten_tomatoes"

netflix <- netflix |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'netflix') |>
  mutate(decile = 100) |>
  mutate(decile = ifelse(0<=rotten_tomatoes & rotten_tomatoes <=10, 
                         '1-10', decile)) |>
  mutate(decile = ifelse(10<rotten_tomatoes & rotten_tomatoes <=20, 
                         '11-20', decile)) |>
  mutate(decile = ifelse(20<rotten_tomatoes & rotten_tomatoes <=30, 
                         '21-30', decile)) |>
  mutate(decile = ifelse(30<rotten_tomatoes & rotten_tomatoes <=40, 
                         '31-40', decile)) |>
  mutate(decile = ifelse(50<rotten_tomatoes & rotten_tomatoes <=60, 
                         '51-60', decile)) |>
  mutate(decile = ifelse(60<rotten_tomatoes & rotten_tomatoes <=70, 
                         '61-70', decile)) |>
  mutate(decile = ifelse(70<rotten_tomatoes & rotten_tomatoes <=80, 
                         '71-80', decile)) |>
  mutate(decile = ifelse(80<rotten_tomatoes & rotten_tomatoes <=90, 
                         '81-90', decile)) |>
  mutate(decile = ifelse(90<rotten_tomatoes & rotten_tomatoes <=100, 
                         '91-100', decile))
  

hulu <- filter(tv_shows_cleaned_copy, Hulu == "Yes")
names(hulu)[7] <- "rotten_tomatoes"

hulu <- hulu |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'hulu') |>
  mutate(decile = 100) |>
  mutate(decile = ifelse(0<=rotten_tomatoes & rotten_tomatoes <=10, 
                         '1-10', decile)) |>
  mutate(decile = ifelse(10<rotten_tomatoes & rotten_tomatoes <=20, 
                         '11-20', decile)) |>
  mutate(decile = ifelse(20<rotten_tomatoes & rotten_tomatoes <=30, 
                         '21-30', decile)) |>
  mutate(decile = ifelse(30<rotten_tomatoes & rotten_tomatoes <=40, 
                         '31-40', decile)) |>
  mutate(decile = ifelse(50<rotten_tomatoes & rotten_tomatoes <=60, 
                         '51-60', decile)) |>
  mutate(decile = ifelse(60<rotten_tomatoes & rotten_tomatoes <=70, 
                         '61-70', decile)) |>
  mutate(decile = ifelse(70<rotten_tomatoes & rotten_tomatoes <=80, 
                         '71-80', decile)) |>
  mutate(decile = ifelse(80<rotten_tomatoes & rotten_tomatoes <=90, 
                         '81-90', decile)) |>
  mutate(decile = ifelse(90<rotten_tomatoes & rotten_tomatoes <=100, 
                         '91-100', decile))

names(tv_shows_cleaned_copy)[10] <- "prime_video"
prime <- filter(tv_shows_cleaned_copy, prime_video == "Yes")
names(prime)[7] <- "rotten_tomatoes"

prime <- prime |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'prime') |>
  mutate(decile = 100) |>
  mutate(decile = ifelse(0<=rotten_tomatoes & rotten_tomatoes <=10, 
                         '1-10', decile)) |>
  mutate(decile = ifelse(10<rotten_tomatoes & rotten_tomatoes <=20, 
                         '11-20', decile)) |>
  mutate(decile = ifelse(20<rotten_tomatoes & rotten_tomatoes <=30, 
                         '21-30', decile)) |>
  mutate(decile = ifelse(30<rotten_tomatoes & rotten_tomatoes <=40, 
                         '31-40', decile)) |>
  mutate(decile = ifelse(50<rotten_tomatoes & rotten_tomatoes <=60, 
                         '51-60', decile)) |>
  mutate(decile = ifelse(60<rotten_tomatoes & rotten_tomatoes <=70, 
                         '61-70', decile)) |>
  mutate(decile = ifelse(70<rotten_tomatoes & rotten_tomatoes <=80, 
                         '71-80', decile)) |>
  mutate(decile = ifelse(80<rotten_tomatoes & rotten_tomatoes <=90, 
                         '81-90', decile)) |>
  mutate(decile = ifelse(90<rotten_tomatoes & rotten_tomatoes <=100, 
                         '91-100', decile))

names(tv_shows_cleaned_copy)[11] <- "disney_plus"
disney <- filter(tv_shows_cleaned_copy, disney_plus == "Yes")
names(disney)[7] <- "rotten_tomatoes"

disney <- disney |>
  select(Title, rotten_tomatoes) |>
  mutate(mean = mean(rotten_tomatoes)) |>
  mutate(platform = 'disney') |>
  mutate(decile = 100) |>
  mutate(decile = ifelse(0<=rotten_tomatoes & rotten_tomatoes <=10, 
                         '1-10', decile)) |>
  mutate(decile = ifelse(10<rotten_tomatoes & rotten_tomatoes <=20, 
                         '11-20', decile)) |>
  mutate(decile = ifelse(20<rotten_tomatoes & rotten_tomatoes <=30, 
                         '21-30', decile)) |>
  mutate(decile = ifelse(30<rotten_tomatoes & rotten_tomatoes <=40, 
                         '31-40', decile)) |>
  mutate(decile = ifelse(50<rotten_tomatoes & rotten_tomatoes <=60, 
                         '51-60', decile)) |>
  mutate(decile = ifelse(60<rotten_tomatoes & rotten_tomatoes <=70, 
                         '61-70', decile)) |>
  mutate(decile = ifelse(70<rotten_tomatoes & rotten_tomatoes <=80, 
                         '71-80', decile)) |>
  mutate(decile = ifelse(80<rotten_tomatoes & rotten_tomatoes <=90, 
                         '81-90', decile)) |>
  mutate(decile = ifelse(90<rotten_tomatoes & rotten_tomatoes <=100, 
                         '91-100', decile))

total <- rbind(netflix, hulu)
total <- rbind(total,prime)
total <- rbind(total,disney)


total_per_platform <- total |>
  group_by(decile, platform) |>
  summarize(number = n())


mean_rankings <- data.frame(platform = c('Netflix',
                                         'Hulu','Amazon Prime',
                                         'Disney'),
                            mean=c(netflix[[3]][1], hulu[[3]][1],
                                   prime[[3]][1],  disney[[3]][1]))




plot1 <- total_per_platform |>
  ggplot(aes(x = decile, y = number, fill = platform)) +
  geom_bar(position = "fill", stat = "identity") +
  scale_color_viridis_d(option = "D", end = 0.8) +
  theme_minimal() +
  labs(
    title = "Percent of shows that 
    fall under a given 
    decile for each platform",
      x = "Decile", y = "Fraction of shows", 
    fill = "Platforms", disnay = "Disney+") +
  scale_fill_discrete(labels = c("Disney+", "Hulu",
                                 "Netflix", "Prime Video")) +
  theme(legend.position = "bottom")
  


plot2 <- total |>
  ggplot(aes(x = platform, y = rotten_tomatoes)) + 
  geom_boxplot() +
  labs(title = "Ratings of Streamed
       Shows by Platform", 
       x = "Platforms", y = "Show Ratings")



plot3 <- mean_rankings |>
  ggplot(aes(x = platform, y = mean)) + ylim(c(0, 100)) +
  geom_bar(stat = "identity") +
  labs(title = "Ratings of Streamed
       Shows by Platform",
       x = "Platforms", y = "Mean Ratings")


grid.arrange(plot1, plot2, plot3, ncol = 3)

```
:::

## Hypothesis Test #1

::: r-fit-text
::: {style="margin: 1px; padding: 10px;"}
RQ #1: **Is the quality of exclusive shows in the four platforms different from non-exclusive shows?**

::: {style="width: 500px; height: 300px; margin-left: 300px"}
```{r}

tv_shows_cleaned_copy1 <- tv_shows_cleaned_copy |>
  pivot_longer(
    cols = exclusive_netflix:exclusive_disney_plus,
    names_to = "all_platforms",
    values_to = "exclusivity"
  )

names(tv_shows_cleaned_copy1)[7] <- "rotten_tomatoes"

observed_fit1 <- tv_shows_cleaned_copy1 |>
  specify(rotten_tomatoes ~ exclusivity) |>
  calculate(stat = "diff in means", order = c(TRUE, FALSE))

null_fits1 <- tv_shows_cleaned_copy1 |>
  specify(rotten_tomatoes ~ exclusivity) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  calculate(stat = "diff in means", order = c(TRUE, FALSE))

p_value <- get_p_value(
  x = null_fits1,
  obs_stat = observed_fit1,
  direction = "less"
)

#Confidence Intervals

null_fits2 <- tv_shows_cleaned_copy1 |>
  specify(rotten_tomatoes ~ exclusivity) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "bootstrap") |>
  calculate(stat = "diff in means", order = c(TRUE, FALSE))

ci1 <- get_confidence_interval(
  x = null_fits2,
  point_estimate = observed_fit1,
  level = 0.95
)

visualize(null_fits1) +
  shade_p_value(obs_stat = observed_fit1, direction="less")
```
:::

::: columns
::: column
**Null Hypothesis**: The average Rotten Tomatoes score of exclusive shows is less than the average Rotten Tomatoes score of non-exclusive shows across all four platforms.

$$
H_0: \mu_{exclusive} < \mu_{non-exclusive}
$$
:::

::: column
**Alternate Hypothesis:** The average Rotten Tomatoes score of exclusive shows is greater than the average Rotten Tomatoes score of non-exclusive shows across all four platforms.

$$
H_A: \mu_{exclusive} > \mu_{non-exclusive}
$$
:::
:::

Result: p-value = 0.001, we reject the null hypothesis.
:::
:::

## Hypothesis Test #2

::: r-fit-text
::: {style="margin: 1px; padding: 10px;"}
RQ #2: **Are exclusive shows' ratings different between the four platforms?**

::: columns
::: column
**Null Hypothesis**: There is no difference in quality of the exclusive shows between the four platforms.

$$
H_0: μ1 = μ2 = μ3 = μ4
$$
:::

::: column
**Alternate Hypothesis:** There is a difference in quality of the exclusive shows between the four platforms.

$$
H_A: μ1 ≠ μ2 ≠ μ3 ≠ μ4
$$
:::
:::

::: {style="width: 500px; height: 300px; margin-left: 300px"}
```{r}
library(tidyverse)
library(tidymodels)
library(dplyr)
library(forcats)

tv_shows_exclusive <- tv_shows_cleaned |>
  pivot_longer(cols = c(exclusive_netflix, exclusive_hulu, exclusive_disney_plus, exclusive_prime_video), values_to = "bool", names_to = "shows") |>
  filter(bool == TRUE) |>
  mutate(shows = fct_relevel(.f = shows, "exclusive_netflix"))

set.seed(123)
observed_fit <- tv_shows_exclusive |>
  specify(`Rotten Tomatoes` ~ shows) |>
  fit()

# Permuting to compute p values
null_fits <- tv_shows_exclusive |>
  specify(`Rotten Tomatoes` ~ shows) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "permute") |>
  fit()

p_value <- get_p_value(
  x = null_fits,
  obs_stat = observed_fit,
  direction = "two sided"
)

# Bootstrapping to compute confidence interval
h2_bootstrap <- tv_shows_exclusive |>
  specify(`Rotten Tomatoes` ~ shows) |>
  hypothesize(null = "independence") |>
  generate(reps = 1000, type = "bootstrap") |>
  fit()

ci <- get_confidence_interval(
  x = h2_bootstrap,
  point_estimate = observed_fit,
  level = .95)

#Conducting Visualization
visualize(null_fits) +
  shade_p_value(obs_stat = observed_fit, direction = "two-sided")
  
```
:::

**Results:** *Point Estimates:* Intercept (52.75), Exclusive: Disney+ (-4.60), Hulu (-1.56), Prime Video (-17.86) *P-Values:* Intercept (0.001), Exclusive: Disney+ (0.001), Hulu (0.02), Prime Video (0.001)
:::
:::

## Conclusions & Future Work

::: r-fit-text
::: {style="margin: 1px; padding: 10px;"}
**Conclusion:**

1.  To sum it up, the data provides sufficient evidence that exclusive shows on the four platforms tend to have greater average Rotten Tomatoes ratings than non-exclusive shows on those platforms.

2.  According to the study, there appears to be a difference in the quality of exclusive programs offered by the four platforms, as evidenced by their Rotten Tomatoes ratings. Netflix, Hulu, and Disney Plus has similar average exclusive show quality, while Prime Video's are significantly lower.

**Future work:**

-   Explore other measures of quality for exclusive shows and non-exclusive shows on each platform, potentailly combining ratings from multiple website to form a more objective measurement of quality.

-   Consider other factors that may influence the perceived quality of content, such as viewership, preferences, and number of subscribers.

-   Include more variables in the dataset by joining, in order to rule out confounding variables that might create biases.
:::
:::
